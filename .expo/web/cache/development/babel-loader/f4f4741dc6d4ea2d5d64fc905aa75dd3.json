{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createStore } from 'redux';\nvar initialState = {\n  sensorData: {}\n};\n\nfunction todos() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'ADD_TODO':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        sensorData: action.text\n      });\n\n    default:\n      return state;\n  }\n}\n\nexport default store = createStore(todos);","map":{"version":3,"sources":["C:/Users/Sea-Ic/Desktop/Dr Hanif/React-Native/nex-plex/nexplex/store/index.js"],"names":["createStore","initialState","sensorData","todos","state","action","type","text","store"],"mappings":";;;;;;AACA,SAASA,WAAT,QAA4B,OAA5B;AAEA,IAAMC,YAAY,GAAC;AACjBC,EAAAA,UAAU,EAAC;AADM,CAAnB;;AAGA,SAASC,KAAT,GAA6C;AAAA,MAA9BC,KAA8B,uEAAtBH,YAAsB;AAAA,MAARI,MAAQ;;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AAGE,6CACKF,KADL;AACWF,QAAAA,UAAU,EAACG,MAAM,CAACE;AAD7B;;AAIF;AACE,aAAOH,KAAP;AATJ;AAWD;;AAED,eAAeI,KAAK,GAAGR,WAAW,CAACG,KAAD,CAAlC","sourcesContent":["\r\nimport { createStore } from 'redux'\r\n\r\nconst initialState={\r\n  sensorData:{}\r\n}\r\nfunction todos(state = initialState, action) {\r\n  switch (action.type) {\r\n    case 'ADD_TODO':\r\n      // let data = [...state]\r\n      // data.push(action.text)\r\n      return {\r\n        ...state,sensorData:action.text\r\n      }\r\n    // }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default store = createStore(todos)"]},"metadata":{},"sourceType":"module"}