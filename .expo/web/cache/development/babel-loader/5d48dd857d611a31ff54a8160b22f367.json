{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Sea-Ic\\\\Desktop\\\\Dr Hanif\\\\React-Native\\\\nex-plex\\\\nexplex\\\\component\\\\Chart2.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { ECharts } from \"react-native-echarts-wrapper\";\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.onRef = function (ref) {\n      if (ref) {\n        _this.chart = ref;\n      }\n    };\n\n    _this.onData = function (param) {};\n\n    _this.initChart = function () {\n      function randomData() {\n        now = new Date(+now + oneDay);\n        value = value + Math.random() * 21 - 10;\n        return {\n          name: now.toString(),\n          value: [[now.getFullYear(), now.getMonth() + 1, now.getDate()].join(\"/\"), Math.round(value)]\n        };\n      }\n\n      var data = [];\n      var now = +new Date(1997, 9, 3);\n      var oneDay = 24 * 3600 * 1000;\n      var value = Math.random() * 1000;\n\n      for (var i = 0; i < 1000; i++) {\n        data.push(randomData());\n      }\n\n      var option = {\n        title: {\n          text: \"Dynamic Chart\"\n        },\n        tooltip: {\n          trigger: \"axis\",\n          formatter: function formatter(params) {\n            params = params[0];\n            var date = new Date(params.name);\n            return date.getDate() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear() + \" : \" + params.value[1];\n          },\n          axisPointer: {\n            animation: false\n          }\n        },\n        xAxis: {\n          type: \"time\",\n          splitLine: {\n            show: false\n          }\n        },\n        yAxis: {\n          type: \"value\",\n          boundaryGap: [0, \"100%\"],\n          splitLine: {\n            show: false\n          }\n        },\n        series: [{\n          type: \"line\",\n          showSymbol: false,\n          hoverAnimation: false,\n          data: data\n        }]\n      };\n\n      _this.chart.setOption(option);\n\n      _this.chart.getOption(function (option) {\n        console.log(option);\n      });\n\n      _this.chart.getOption(function (option) {\n        console.log(option);\n      }, [\"dataZoom\", \"series\"]);\n\n      var instance = _this.chart;\n      setInterval(function () {\n        for (var i = 0; i < 5; i++) {\n          data.shift();\n          data.push(randomData());\n        }\n\n        instance.setOption({\n          series: [{\n            data: data\n          }]\n        });\n      }, 100);\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(SafeAreaView, {\n        style: styles.chartContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 7\n        }\n      }, React.createElement(Button, {\n        title: \"Start\",\n        onPress: this.initChart,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 9\n        }\n      }), React.createElement(ECharts, {\n        option: {},\n        ref: this.onRef,\n        additionalCode: this.additionalCode,\n        onData: this.onData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };\nvar styles = StyleSheet.create({\n  chartContainer: {\n    flex: 1,\n    backgroundColor: \"#F5FCFF\",\n    width: '100%',\n    padding: 20\n  }\n});","map":{"version":3,"sources":["C:/Users/Sea-Ic/Desktop/Dr Hanif/React-Native/nex-plex/nexplex/component/Chart2.js"],"names":["React","Component","ECharts","App","onRef","ref","chart","onData","param","initChart","randomData","now","Date","oneDay","value","Math","random","name","toString","getFullYear","getMonth","getDate","join","round","data","i","push","option","title","text","tooltip","trigger","formatter","params","date","axisPointer","animation","xAxis","type","splitLine","show","yAxis","boundaryGap","series","showSymbol","hoverAnimation","setOption","getOption","console","log","instance","setInterval","shift","styles","chartContainer","additionalCode","StyleSheet","create","flex","backgroundColor","width","padding"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { StyleSheet, SafeAreaView, Button } from \"react-native\";\r\nimport { ECharts } from \"react-native-echarts-wrapper\";\r\n\r\nexport default class App extends Component {\r\n  onRef = ref => {\r\n    if (ref) {\r\n      this.chart = ref;\r\n    }\r\n  };\r\n\r\n  onData = param => {};\r\n\r\n  initChart = () => {\r\n    function randomData() {\r\n      now = new Date(+now + oneDay);\r\n      value = value + Math.random() * 21 - 10;\r\n      return {\r\n        name: now.toString(),\r\n        value: [\r\n          [now.getFullYear(), now.getMonth() + 1, now.getDate()].join(\"/\"),\r\n          Math.round(value)\r\n        ]\r\n      };\r\n    }\r\n\r\n    var data = [];\r\n    var now = +new Date(1997, 9, 3);\r\n    var oneDay = 24 * 3600 * 1000;\r\n    var value = Math.random() * 1000;\r\n    for (var i = 0; i < 1000; i++) {\r\n      data.push(randomData());\r\n    }\r\n\r\n    const option = {\r\n      title: {\r\n        text: \"Dynamic Chart\"\r\n      },\r\n      tooltip: {\r\n        trigger: \"axis\",\r\n        formatter: function(params) {\r\n          params = params[0];\r\n          var date = new Date(params.name);\r\n          return (\r\n            date.getDate() +\r\n            \"/\" +\r\n            (date.getMonth() + 1) +\r\n            \"/\" +\r\n            date.getFullYear() +\r\n            \" : \" +\r\n            params.value[1]\r\n          );\r\n        },\r\n        axisPointer: {\r\n          animation: false\r\n        }\r\n      },\r\n      xAxis: {\r\n        type: \"time\",\r\n        splitLine: {\r\n          show: false\r\n        }\r\n      },\r\n      yAxis: {\r\n        type: \"value\",\r\n        boundaryGap: [0, \"100%\"],\r\n        splitLine: {\r\n          show: false\r\n        }\r\n      },\r\n      series: [\r\n        {\r\n          type: \"line\",\r\n          showSymbol: false,\r\n          hoverAnimation: false,\r\n          data: data\r\n        }\r\n      ]\r\n    };\r\n\r\n    this.chart.setOption(option);\r\n\r\n    //no query parameter: whole option object\r\n    this.chart.getOption(option => {\r\n      console.log(option);\r\n    });\r\n\r\n    //with query parameter\r\n    this.chart.getOption(\r\n      option => {\r\n        console.log(option);\r\n      },\r\n      [\"dataZoom\", \"series\"]\r\n    );\r\n\r\n    const instance = this.chart;\r\n\r\n    setInterval(function() {\r\n      for (var i = 0; i < 5; i++) {\r\n        data.shift();\r\n        data.push(randomData());\r\n      }\r\n\r\n      instance.setOption({\r\n        series: [\r\n          {\r\n            data: data\r\n          }\r\n        ]\r\n      });\r\n    }, 100);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <SafeAreaView style={styles.chartContainer}>\r\n        <Button title=\"Start\" onPress={this.initChart} />\r\n\r\n        <ECharts\r\n          option={{}}\r\n          ref={this.onRef}\r\n          additionalCode={this.additionalCode}\r\n          onData={this.onData}\r\n        />\r\n      </SafeAreaView>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  chartContainer: {\r\n    flex: 1,\r\n    backgroundColor: \"#F5FCFF\",\r\n    width:'100%',\r\n    padding:20\r\n  }\r\n});"]},"metadata":{},"sourceType":"module"}