{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Sea-Ic\\\\Desktop\\\\Dr Hanif\\\\React-Native\\\\nex-plex\\\\nexplex\\\\component\\\\Chart2.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { ECharts } from \"react-native-echarts-wrapper\";\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.onRef = function (ref) {\n      if (ref) {\n        _this.chart = ref;\n      }\n    };\n\n    _this.onData = function (param) {};\n\n    _this.initChart = function () {\n      function randomData() {\n        now = new Date(+now + oneDay);\n        value = value + Math.random() * 21 - 10;\n        return {\n          name: now.toString(),\n          value: [[now.getFullYear(), now.getMonth() + 1, now.getDate()].join(\"/\"), Math.round(value)]\n        };\n      }\n\n      var data = [];\n      var now = +new Date(1997, 9, 3);\n      var oneDay = 24 * 3600 * 1000;\n      var value = Math.random() * 1000;\n\n      for (var i = 0; i < 1000; i++) {\n        data.push(randomData());\n      }\n\n      var option = {\n        tooltip: {\n          formatter: \"{a} <br/>{b} : {c} ppm\"\n        },\n        radius: \"100%\",\n        series: [{\n          type: \"gauge\",\n          detail: {\n            formatter: \"{value} ppm\"\n          },\n          data: [{\n            value: _this.props.data,\n            name: 'this.unit'\n          }],\n          max: 100,\n          axisLabel: {\n            fontSize: 14,\n            distance: 10\n          },\n          detail: {\n            formatter: \"{value}\",\n            offsetCenter: [\"0\", \"78%\"]\n          },\n          title: {\n            offsetCenter: [\"0\", \"100%\"],\n            color: \"rgba(0, 0, 0, 1)\"\n          },\n          splitNumber: 4,\n          axisLine: {\n            lineStyle: {\n              color: [[0.29, \"rgb(15,164,100)\"], [0.7, \"rgb(235,137,52)\"], [1, \"rgb(219,58,55)\"]],\n              shadowColor: \"rgba(255, 255, 255, 0.7)\",\n              shadowBlur: 10,\n              width: 20\n            }\n          },\n          splitLine: {\n            show: true,\n            length: \"20%\"\n          }\n        }]\n      };\n\n      _this.chart.setOption(option);\n\n      _this.chart.getOption(function (option) {\n        console.log(option);\n      });\n\n      _this.chart.getOption(function (option) {\n        console.log(option);\n      }, [\"dataZoom\", \"series\"]);\n\n      var instance = _this.chart;\n      setInterval(function () {\n        instance.setOption({\n          series: [{\n            data: [{\n              value: this.props.data,\n              name: 'this.unit'\n            }]\n          }]\n        });\n      }, 100);\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(SafeAreaView, {\n        style: styles.chartContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 7\n        }\n      }, React.createElement(Button, {\n        title: \"Start\",\n        onPress: this.initChart,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 9\n        }\n      }), React.createElement(ECharts, {\n        option: {},\n        ref: this.onRef,\n        additionalCode: this.additionalCode,\n        onData: this.onData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };\nvar styles = StyleSheet.create({\n  chartContainer: {\n    flex: 1,\n    backgroundColor: \"#F5FCFF\",\n    width: '100%'\n  }\n});","map":{"version":3,"sources":["C:/Users/Sea-Ic/Desktop/Dr Hanif/React-Native/nex-plex/nexplex/component/Chart2.js"],"names":["React","Component","ECharts","App","onRef","ref","chart","onData","param","initChart","randomData","now","Date","oneDay","value","Math","random","name","toString","getFullYear","getMonth","getDate","join","round","data","i","push","option","tooltip","formatter","radius","series","type","detail","props","max","axisLabel","fontSize","distance","offsetCenter","title","color","splitNumber","axisLine","lineStyle","shadowColor","shadowBlur","width","splitLine","show","length","setOption","getOption","console","log","instance","setInterval","styles","chartContainer","additionalCode","StyleSheet","create","flex","backgroundColor"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { StyleSheet, SafeAreaView, Button } from \"react-native\";\r\nimport { ECharts } from \"react-native-echarts-wrapper\";\r\n\r\nexport default class App extends Component {\r\n  onRef = ref => {\r\n    if (ref) {\r\n      this.chart = ref;\r\n    }\r\n  };\r\n\r\n  onData = param => {};\r\n\r\n  initChart = () => {\r\n    function randomData() {\r\n      now = new Date(+now + oneDay);\r\n      value = value + Math.random() * 21 - 10;\r\n      return {\r\n        name: now.toString(),\r\n        value: [\r\n          [now.getFullYear(), now.getMonth() + 1, now.getDate()].join(\"/\"),\r\n          Math.round(value)\r\n        ]\r\n      };\r\n    }\r\n\r\n    var data = [];\r\n    var now = +new Date(1997, 9, 3);\r\n    var oneDay = 24 * 3600 * 1000;\r\n    var value = Math.random() * 1000;\r\n    for (var i = 0; i < 1000; i++) {\r\n      data.push(randomData());\r\n    }\r\n\r\n    const option = {\r\n      tooltip: {\r\n        formatter: \"{a} <br/>{b} : {c} ppm\",\r\n      },\r\n      radius: \"100%\",\r\n      // toolbox: {\r\n      //   feature: {\r\n      //     restore: {},\r\n      //     saveAsImage: {},\r\n      //   },\r\n      // },\r\n      series: [\r\n        {\r\n          // name: \"Ammonia\",\r\n          type: \"gauge\",\r\n          detail: { formatter: \"{value} ppm\" },\r\n          data: [{ value: this.props.data, name: 'this.unit' }],\r\n          max: 100,\r\n          axisLabel: {\r\n            fontSize: 14,\r\n                 distance: 10\r\n          },\r\n          detail: {\r\n            formatter: \"{value}\",\r\n            // backgroundColor: \"rgba(227, 0, 0, 1)\",\r\n            offsetCenter: [\"0\", \"78%\"],\r\n          },\r\n          title: {\r\n            offsetCenter: [\"0\", \"100%\"],\r\n            color: \"rgba(0, 0, 0, 1)\",\r\n          },\r\n          splitNumber: 4,\r\n          axisLine: {\r\n            lineStyle: {\r\n              color: [\r\n                [0.29, \"rgb(15,164,100)\"],\r\n                [0.7, \"rgb(235,137,52)\"],\r\n                [1, \"rgb(219,58,55)\"],\r\n              ],\r\n              // color: [\r\n              //   [0.29, \"rgb(115,222,133)\"],\r\n              //   [0.7, \"rgb(235,137,52)\"],\r\n              //   [1, \"rgb(219,58,55)\"],\r\n              // ],\r\n              shadowColor: \"rgba(255, 255, 255, 0.7)\",\r\n              shadowBlur: 10,\r\n              width: 20,\r\n            },\r\n          },\r\n                     splitLine: {\r\n      show: true,\r\n      length: \"20%\"}\r\n          // startAngle: 190,\r\n          // endAngle: -0,\r\n        },\r\n        \r\n      ],\r\n    };\r\n\r\n    this.chart.setOption(option);\r\n\r\n    //no query parameter: whole option object\r\n    this.chart.getOption(option => {\r\n      console.log(option);\r\n    });\r\n\r\n    //with query parameter\r\n    this.chart.getOption(\r\n      option => {\r\n        console.log(option);\r\n      },\r\n      [\"dataZoom\", \"series\"]\r\n    );\r\n\r\n    const instance = this.chart;\r\n\r\n    setInterval(function() {\r\n      // for (var i = 0; i < 5; i++) {\r\n      //   data.shift();\r\n      //   data.push(randomData());\r\n      // }\r\n\r\n      instance.setOption({\r\n        series: [\r\n          {\r\n            data: [{ value: this.props.data, name: 'this.unit' }],\r\n          }\r\n        ]\r\n      });\r\n    }, 100);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <SafeAreaView style={styles.chartContainer}>\r\n        <Button title=\"Start\" onPress={this.initChart} />\r\n\r\n        <ECharts\r\n          option={{}}\r\n          ref={this.onRef}\r\n          additionalCode={this.additionalCode}\r\n          onData={this.onData}\r\n        />\r\n      </SafeAreaView>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  chartContainer: {\r\n    flex: 1,\r\n    backgroundColor: \"#F5FCFF\",\r\n    width:'100%'\r\n  }\r\n});"]},"metadata":{},"sourceType":"module"}