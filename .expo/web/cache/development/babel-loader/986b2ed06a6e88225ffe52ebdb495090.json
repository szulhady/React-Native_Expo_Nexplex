{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Sea-Ic\\\\Desktop\\\\Dr Hanif\\\\React-Native\\\\nex-plex\\\\nexplex\\\\App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState, useMemo, useReducer } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport AsyncStorage from '@react-native-community/async-storage';\nimport DrawerNavigation from \"./navigation/DrawerNavigation\";\nimport LoginNavigation from \"./navigation/LoginNavigation\";\nimport AuthContext from \"./component/Context\";\n\nvar mqtt = require('@taoqf/react-native-mqtt');\n\nvar client = mqtt.connect('wss://tron.airmode.live:8083/mqtt');\nimport { Provider } from 'react-redux';\nimport store from \"./store/index\";\nexport default function App() {\n  var initialLoginState = {\n    isLoading: true,\n    username: null,\n    token: null,\n    deviceID: null,\n    scope: null,\n    topics: null,\n    userId: null\n  };\n\n  var loginReducer = function loginReducer(prevState, action) {\n    switch (action.type) {\n      case 'RETRIEVE_TOKEN':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          username: action.username,\n          token: action.token,\n          deviceID: action.deviceID,\n          scope: action.scope,\n          topics: action.topics,\n          userId: action.userId,\n          isLoading: false\n        });\n\n      case 'LOGIN':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          username: action.username,\n          token: action.token,\n          deviceID: action.deviceID,\n          scope: action.scope,\n          topics: action.topics,\n          userId: action.userId,\n          isLoading: false\n        });\n\n      case 'LOGOUT':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          username: null,\n          token: null,\n          deviceID: null,\n          scope: null,\n          topics: null,\n          userId: null,\n          isLoading: false\n        });\n\n      case 'REGISTER':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          username: action.id,\n          token: action.token,\n          isLoading: false\n        });\n    }\n  };\n\n  var _useReducer = useReducer(loginReducer, initialLoginState),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      loginState = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var authContext = React.useMemo(function () {\n    return {\n      signIn: function signIn(foundUser) {\n        var deviceID, scope, topics, userId, username, token, items;\n        return _regeneratorRuntime.async(function signIn$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                deviceID = foundUser.deviceID, scope = foundUser.scope, topics = foundUser.topics, userId = foundUser.userId, username = foundUser.username, token = foundUser.token;\n                console.log(token);\n\n                if (!(token !== 'error')) {\n                  _context.next = 17;\n                  break;\n                }\n\n                _context.prev = 3;\n                items = {\n                  'deviceId': deviceID,\n                  'scope': scope,\n                  'topics': topics,\n                  'userId': userId,\n                  'username': username,\n                  'token': token\n                };\n                _context.next = 7;\n                return _regeneratorRuntime.awrap(AsyncStorage.setItem('user', JSON.stringify(items)));\n\n              case 7:\n                if (!client.connected) {\n                  client.reconnect();\n                }\n\n                console.log(client.connected);\n                client.subscribe(topics[0], function (err) {\n                  if (!err) {\n                    console.log('connected');\n                  }\n                });\n                client.on('message', function (topic, message) {\n                  var data = JSON.parse(message.toString());\n                  store.dispatch({\n                    type: 'ADD_TODO',\n                    text: data\n                  });\n                });\n                dispatch({\n                  type: 'LOGIN',\n                  deviceID: deviceID,\n                  scope: scope,\n                  topics: topics,\n                  userId: userId,\n                  username: username,\n                  token: token,\n                  topic: '1000/data'\n                });\n                _context.next = 17;\n                break;\n\n              case 14:\n                _context.prev = 14;\n                _context.t0 = _context[\"catch\"](3);\n                console.log(_context.t0);\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, [[3, 14]], Promise);\n      },\n      signOut: function signOut() {\n        return _regeneratorRuntime.async(function signOut$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return _regeneratorRuntime.awrap(AsyncStorage.removeItem('user'));\n\n              case 3:\n                _context2.next = 8;\n                break;\n\n              case 5:\n                _context2.prev = 5;\n                _context2.t0 = _context2[\"catch\"](0);\n                console.log(_context2.t0);\n\n              case 8:\n                client.end();\n                dispatch({\n                  type: 'LOGOUT'\n                });\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, [[0, 5]], Promise);\n      },\n      signUp: function signUp() {}\n    };\n  }, []);\n  return React.createElement(Provider, {\n    store: store,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 5\n    }\n  }, React.createElement(AuthContext.Provider, {\n    value: authContext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 5\n    }\n  }, loginState.token !== null ? React.createElement(DrawerNavigation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }\n  }) : React.createElement(LoginNavigation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/Sea-Ic/Desktop/Dr Hanif/React-Native/nex-plex/nexplex/App.js"],"names":["StatusBar","React","useState","useMemo","useReducer","AsyncStorage","DrawerNavigation","LoginNavigation","AuthContext","mqtt","require","client","connect","Provider","store","App","initialLoginState","isLoading","username","token","deviceID","scope","topics","userId","loginReducer","prevState","action","type","id","loginState","dispatch","authContext","signIn","foundUser","console","log","items","setItem","JSON","stringify","connected","reconnect","subscribe","err","on","topic","message","data","parse","toString","text","signOut","removeItem","end","signUp","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useState, useMemo, useReducer } from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport AsyncStorage from '@react-native-community/async-storage'\nimport DrawerNavigation from './navigation/DrawerNavigation'\nimport LoginNavigation from './navigation/LoginNavigation'\nimport AuthContext from './component/Context'\n\n\nvar mqtt = require('@taoqf/react-native-mqtt')\nvar client  = mqtt.connect('wss://tron.airmode.live:8083/mqtt')\n\n\nimport {Provider} from 'react-redux'\n// var mqtt = require('@taoqf/react-native-mqtt')\n// var client  = mqtt.connect('wss://tron.airmode.live:8083/mqtt')\n\n// client.on('connect', function () {\n//   client.subscribe('1000/data', function (err) {\n//       if (!err) {\n//           // client.publish('presence', 'Hello mqtt')\n//           console.log('connected')\n//         }\n//       })\n//     })\n\n\n\nimport store from './store/index'\n\n\nexport default function App() {\n  // const [isLogin, setIsLogin] = useState(false)\n\n  const initialLoginState = {\n    isLoading: true,\n    username: null,\n    token: null,\n    deviceID: null,\n    scope: null,\n    topics: null,\n    userId: null,\n  };\n\n  const loginReducer = (prevState, action) => {\n    switch( action.type ) {\n      case 'RETRIEVE_TOKEN': \n        return {\n          ...prevState,\n          username: action.username,\n          token: action.token,\n          deviceID: action.deviceID,\n          scope: action.scope,\n          topics: action.topics,\n          userId: action.userId,\n          isLoading: false,\n        };\n      case 'LOGIN': \n\n        return {\n          ...prevState,\n          username: action.username,\n          token: action.token,\n          deviceID: action.deviceID,\n          scope: action.scope,\n          topics: action.topics,\n          userId: action.userId,\n          isLoading: false,\n        };\n      case 'LOGOUT': \n        return {\n          ...prevState,\n          username: null,\n          token: null,\n          deviceID: null,\n          scope: null,\n          topics: null,\n          userId: null,\n          isLoading: false,\n        };\n      case 'REGISTER': \n        return {\n          ...prevState,\n          username: action.id,\n          token: action.token,\n          isLoading: false,\n        };\n    }\n  };\n\n  \n  const [loginState, dispatch] = useReducer(loginReducer, initialLoginState);\n\n  const authContext = React.useMemo(() => ({\n    signIn: async(foundUser) => {\n      const { deviceID, scope, topics, userId, username, token } = foundUser\n      console.log(token)\n\n      if( token!=='error'){\n        try {\n          // const items = [['deviceID', deviceID], ['scope',JSON.stringify(scope)], ['topics',JSON.stringify(topics)], ['userId',String(userId)], ['username', username], ['token', token]]\n          // await AsyncStorage.multiSet( items);\n         const items = {'deviceId':deviceID, 'scope':scope, 'topics':topics, 'userId': userId, 'username': username, 'token':token }\n\n        //  console.log(topicsData)\n         await AsyncStorage.setItem('user', JSON.stringify(items)) \n        //  getTopic = async () =>{\n          // const topic =await AsyncStorage.getItem('user').then(res=>(JSON.parse(res)).topics[0])\n          if(!client.connected){\n            client.reconnect()\n          }\n          console.log(client.connected)\n          client.subscribe(topics[0], function (err) {\n            if (!err) {\n               console.log('connected')\n             }\n          })\n          client.on('message', function (topic, message) {\n          const data = JSON.parse(message.toString())\n          // console.log(data)\n          store.dispatch({\n            type: 'ADD_TODO',\n            text: data\n          })\n          // console.log(store.getState().sensorData)\n        })\n     \n        // }\n        // getTopic()\n\n         dispatch({ type: 'LOGIN', deviceID:deviceID, scope:scope, topics:topics, userId:userId, username: username, token: token , topic:'1000/data'});\n        } catch(e) {\n          console.log(e);\n        }\n      }\n    },\n    signOut: async() => {\n      // setUserToken(null);\n      // setIsLoading(false);\n      try {\n        await AsyncStorage.removeItem('user');\n      } catch(e) {\n        console.log(e);\n      }\n      client.end()\n      dispatch({ type: 'LOGOUT' });\n    },\n    signUp: () => {\n      // setUserToken('fgkj');\n      // setIsLoading(false);\n    },\n  }), []);\n\n  return (\n    // <View style={styles.container}>\n    //   <Text>Open up App.js to start working on your app!!!</Text>\n    //   <StatusBar style=\"auto\" />\n    // </View>\n    <Provider store={store}>\n\n    <AuthContext.Provider value={authContext}>\n      {loginState.token !== null  ?\n      <DrawerNavigation />\n      :\n      <LoginNavigation/>\n    }  \n    </AuthContext.Provider>\n    </Provider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}